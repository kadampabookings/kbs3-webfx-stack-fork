<?xml version="1.0" encoding="UTF-8"?>
<project>

    <parent name="webfx-stack-parent"/>

    <update-options>
        <generate-export-snapshot/>
    </update-options>

    <modules>
        <subdirectories-modules/>
    </modules>

    <required-libraries>

        <group>
            <groupId>dev.webfx</groupId>
            <version>0.1.0-SNAPSHOT</version>

            <webfx-library name="webfx"/>
            <webfx-library name="webfx-stack-parent"/>
            <webfx-library name="webfx-lib-javacupruntime"/>
            <!-- A few high level stack modules are using webfx-extras -->
            <webfx-library name="webfx-extras-private"/>
        </group>

        <library name="com-zaxxer-hikari">
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <exported-packages>
                <package>com.zaxxer.hikari</package>
            </exported-packages>
        </library>

        <library name="Java-WebSocket">
            <groupId>org.java-websocket</groupId>
            <exported-packages>
                <package>org.java_websocket</package>
                <package>org.java_websocket.client</package>
                <package>org.java_websocket.drafts</package>
                <package>org.java_websocket.enums</package>
                <package>org.java_websocket.handshake</package>
            </exported-packages>
        </library>

        <group>
            <groupId>org.teavm</groupId>

            <library name="teavm-interop">
                <exported-packages>
                    <package>org.teavm.interop</package>
                </exported-packages>
            </library>

            <library name="teavm-jso">
                <exported-packages>
                    <package>org.teavm.jso</package>
                </exported-packages>
            </library>

            <library name="teavm-jso-apis">
                <exported-packages>
                    <package>org.teavm.jso.core</package>
                    <package>org.teavm.jso.dom.events</package>
                    <package>org.teavm.jso.typedarrays</package>
                </exported-packages>
            </library>

        </group>

        <group>
            <groupId>io.vertx</groupId>

            <library name="io-vertx-core">
                <artifactId>vertx-core</artifactId>
                <exported-packages>
                    <package>io.vertx.core</package>
                    <package>io.vertx.core.eventbus</package>
                    <package>io.vertx.core.eventbus.impl</package>
                    <package>io.vertx.core.http</package>
                    <package>io.vertx.core.json</package>
                    <package>io.vertx.core.net</package>
                    <package>io.vertx.core.spi.cluster</package>
                </exported-packages>
            </library>

            <library name="io-vertx-eventbusbridge-common">
                <artifactId>vertx-bridge-common</artifactId>
                <exported-packages>
                    <package>io.vertx.ext.bridge</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-jdbc">
                <artifactId>vertx-jdbc-client</artifactId>
                <exported-packages>
                    <package>io.vertx.jdbcclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-sql">
                <artifactId>vertx-sql-client</artifactId>
                <exported-packages>
                    <package>io.vertx.sqlclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-sql-pg">
                <artifactId>vertx-pg-client</artifactId>
                <exported-packages>
                    <package>io.vertx.pgclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-web">
                <artifactId>vertx-web</artifactId>
                <exported-packages>
                    <package>io.vertx.ext.web</package>
                    <package>io.vertx.ext.web.handler</package>
                    <package>io.vertx.ext.web.handler.sockjs</package>
                    <package>io.vertx.ext.web.sstore</package>
                </exported-packages>
            </library>

        </group>

        <!-- Additional library required at runtime when authenticating to a postgres database in a docker container -->
        <library name="com-ongres-scram-client">
            <artifactId>client</artifactId>
            <groupId>com.ongres.scram</groupId>
        </library>

    </required-libraries>

    <!--

     ******************************************************************************************************************* 
     ******************************* Section managed by WebFX (DO NOT EDIT MANUALLY) *********************************** 
     ******************************************************************************************************************* 

     <export-snapshot> allows a much faster import of this WebFX library into another project. It's a self-contained
     image of this and children modules. All information required for the import of this library is present in this
     single file. The export snapshot is optional, and a WebFX library that doesn't generate it can still be imported
     into another project, but WebFX will then need to download all individual webfx.xml files for every children
     modules, together with their pom and sources. Knowing that each download requires a maven invocation that takes
     at least 3s (sometimes 10s or more), the export snapshot brings a significant performance improvement in the
     import process.

     -->

    <export-snapshot>

        <project name="webfx-stack-private">

            <parent name="webfx-stack-parent"/>

            <modules>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-buscall</module>
                <module>webfx-stack-authn-login</module>
                <module>webfx-stack-authn-login-buscall</module>
                <module>webfx-stack-authn-login-remote</module>
                <module>webfx-stack-authn-login-server-gateway</module>
                <module>webfx-stack-authn-login-server-gateway-facebook</module>
                <module>webfx-stack-authn-login-server-gateway-google</module>
                <module>webfx-stack-authn-login-server-gateway-mojoauth</module>
                <module>webfx-stack-authn-login-server-portal</module>
                <module>webfx-stack-authn-login-ui</module>
                <module>webfx-stack-authn-login-ui-gateway</module>
                <module>webfx-stack-authn-login-ui-gateway-facebook</module>
                <module>webfx-stack-authn-login-ui-gateway-google</module>
                <module>webfx-stack-authn-login-ui-gateway-mojoauth</module>
                <module>webfx-stack-authn-login-ui-gateway-password</module>
                <module>webfx-stack-authn-login-ui-gateway-webviewbased</module>
                <module>webfx-stack-authn-login-ui-gateway-webviewbased-gwt</module>
                <module>webfx-stack-authn-login-ui-gateway-webviewbased-openjfx</module>
                <module>webfx-stack-authn-login-ui-portal</module>
                <module>webfx-stack-authn-logout-client</module>
                <module>webfx-stack-authn-logout-server</module>
                <module>webfx-stack-authn-oauth2</module>
                <module>webfx-stack-authn-oauth2-vertx</module>
                <module>webfx-stack-authn-remote</module>
                <module>webfx-stack-authn-server-gateway</module>
                <module>webfx-stack-authn-server-gateway-facebook</module>
                <module>webfx-stack-authn-server-gateway-google</module>
                <module>webfx-stack-authn-server-gateway-mojoauth</module>
                <module>webfx-stack-authn-server-portal</module>
                <module>webfx-stack-authz-client</module>
                <module>webfx-stack-authz-server</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-com-bus-call-job</module>
                <module>webfx-stack-com-bus-json</module>
                <module>webfx-stack-com-bus-json-client</module>
                <module>webfx-stack-com-bus-json-client-websocket</module>
                <module>webfx-stack-com-bus-json-client-websocket-java</module>
                <module>webfx-stack-com-bus-json-client-websocket-web</module>
                <module>webfx-stack-com-bus-json-server</module>
                <module>webfx-stack-com-bus-json-vertx</module>
                <module>webfx-stack-com-bus-simple</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-com-websocket</module>
                <module>webfx-stack-com-websocket-gwt</module>
                <module>webfx-stack-com-websocket-java</module>
                <module>webfx-stack-conf</module>
                <module>webfx-stack-conf-env-java</module>
                <module>webfx-stack-conf-file-java</module>
                <module>webfx-stack-conf-format-json</module>
                <module>webfx-stack-conf-localstorage</module>
                <module>webfx-stack-conf-resource</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-query-buscall</module>
                <module>webfx-stack-db-query-remote</module>
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-db-querypush-buscall</module>
                <module>webfx-stack-db-querypush-client</module>
                <module>webfx-stack-db-querypush-client-simple</module>
                <module>webfx-stack-db-querypush-remote</module>
                <module>webfx-stack-db-querypush-server</module>
                <module>webfx-stack-db-querypush-server-simple</module>
                <module>webfx-stack-db-querysubmit-java-jdbc</module>
                <module>webfx-stack-db-querysubmit-vertx</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-db-submit-buscall</module>
                <module>webfx-stack-db-submit-listener</module>
                <module>webfx-stack-db-submit-remote</module>
                <module>webfx-stack-http-server-vertx</module>
                <module>webfx-stack-i18n</module>
                <module>webfx-stack-i18n-json</module>
                <module>webfx-stack-orm-datasourcemodel-service</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-orm-domainmodel-activity</module>
                <module>webfx-stack-orm-domainmodel-service</module>
                <module>webfx-stack-orm-dql</module>
                <module>webfx-stack-orm-dql-query-interceptor</module>
                <module>webfx-stack-orm-dql-querypush-interceptor</module>
                <module>webfx-stack-orm-dql-submit-interceptor</module>
                <module>webfx-stack-orm-entity</module>
                <module>webfx-stack-orm-entity-controls</module>
                <module>webfx-stack-orm-expression</module>
                <module>webfx-stack-orm-reactive-call</module>
                <module>webfx-stack-orm-reactive-dql</module>
                <module>webfx-stack-orm-reactive-entities</module>
                <module>webfx-stack-orm-reactive-visual</module>
                <module>webfx-stack-push</module>
                <module>webfx-stack-push-client</module>
                <module>webfx-stack-push-client-simple</module>
                <module>webfx-stack-push-server</module>
                <module>webfx-stack-push-server-liveclient-interceptor</module>
                <module>webfx-stack-push-server-simple</module>
                <module>webfx-stack-routing-activity</module>
                <module>webfx-stack-routing-router</module>
                <module>webfx-stack-routing-router-client</module>
                <module>webfx-stack-routing-router-vertx</module>
                <module>webfx-stack-routing-uirouter</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-client</module>
                <module>webfx-stack-session-state</module>
                <module>webfx-stack-session-state-client</module>
                <module>webfx-stack-session-state-client-fx</module>
                <module>webfx-stack-session-state-server</module>
                <module>webfx-stack-session-vertx</module>
                <module>webfx-stack-ui-action</module>
                <module>webfx-stack-ui-controls</module>
                <module>webfx-stack-ui-fxraiser</module>
                <module>webfx-stack-ui-fxraiser-json</module>
                <module>webfx-stack-ui-operation</module>
                <module>webfx-stack-ui-operation-action</module>
                <module>webfx-stack-ui-util</module>
                <module>webfx-stack-ui-validation</module>
            </modules>

            <required-libraries>

                <group>
                    <groupId>dev.webfx</groupId>
                    <version>0.1.0-SNAPSHOT</version>

                    <webfx-library name="webfx"/>
                    <webfx-library name="webfx-stack-parent"/>
                    <webfx-library name="webfx-lib-javacupruntime"/>
                    <!-- A few high level stack modules are using webfx-extras -->
                    <webfx-library name="webfx-extras-private"/>
                </group>

                <library name="com-zaxxer-hikari">
                    <groupId>com.zaxxer</groupId>
                    <artifactId>HikariCP</artifactId>
                    <exported-packages>
                        <package>com.zaxxer.hikari</package>
                    </exported-packages>
                </library>

                <library name="Java-WebSocket">
                    <groupId>org.java-websocket</groupId>
                    <exported-packages>
                        <package>org.java_websocket</package>
                        <package>org.java_websocket.client</package>
                        <package>org.java_websocket.drafts</package>
                        <package>org.java_websocket.enums</package>
                        <package>org.java_websocket.handshake</package>
                    </exported-packages>
                </library>

                <group>
                    <groupId>org.teavm</groupId>

                    <library name="teavm-interop">
                        <exported-packages>
                            <package>org.teavm.interop</package>
                        </exported-packages>
                    </library>

                    <library name="teavm-jso">
                        <exported-packages>
                            <package>org.teavm.jso</package>
                        </exported-packages>
                    </library>

                    <library name="teavm-jso-apis">
                        <exported-packages>
                            <package>org.teavm.jso.core</package>
                            <package>org.teavm.jso.dom.events</package>
                            <package>org.teavm.jso.typedarrays</package>
                        </exported-packages>
                    </library>

                </group>

                <group>
                    <groupId>io.vertx</groupId>

                    <library name="io-vertx-core">
                        <artifactId>vertx-core</artifactId>
                        <exported-packages>
                            <package>io.vertx.core</package>
                            <package>io.vertx.core.eventbus</package>
                            <package>io.vertx.core.eventbus.impl</package>
                            <package>io.vertx.core.http</package>
                            <package>io.vertx.core.json</package>
                            <package>io.vertx.core.net</package>
                            <package>io.vertx.core.spi.cluster</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-eventbusbridge-common">
                        <artifactId>vertx-bridge-common</artifactId>
                        <exported-packages>
                            <package>io.vertx.ext.bridge</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-client-jdbc">
                        <artifactId>vertx-jdbc-client</artifactId>
                        <exported-packages>
                            <package>io.vertx.jdbcclient</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-client-sql">
                        <artifactId>vertx-sql-client</artifactId>
                        <exported-packages>
                            <package>io.vertx.sqlclient</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-client-sql-pg">
                        <artifactId>vertx-pg-client</artifactId>
                        <exported-packages>
                            <package>io.vertx.pgclient</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-web">
                        <artifactId>vertx-web</artifactId>
                        <exported-packages>
                            <package>io.vertx.ext.web</package>
                            <package>io.vertx.ext.web.handler</package>
                            <package>io.vertx.ext.web.handler.sockjs</package>
                            <package>io.vertx.ext.web.sstore</package>
                        </exported-packages>
                    </library>

                </group>

                <!-- Additional library required at runtime when authenticating to a postgres database in a docker container -->
                <library name="com-ongres-scram-client">
                    <artifactId>client</artifactId>
                    <groupId>com.ongres.scram</groupId>
                </library>

            </required-libraries>

        </project>

        <project name="webfx-stack-authn">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-async</module>
                </used-by-source-modules>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.authn.serial.UserClaimsSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.authn.serial.UsernamePasswordCredentialsSerialCodec</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn</package>
                <package>dev.webfx.stack.authn.serial</package>
                <package>dev.webfx.stack.authn.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-com-serial</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.authn.spi.AuthenticationServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-authn-buscall">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.call.spi.BusCallEndpoint">dev.webfx.stack.authn.buscall.AuthenticateMethodEndpoint</provider>
                <provider interface="dev.webfx.stack.com.bus.call.spi.BusCallEndpoint">dev.webfx.stack.authn.buscall.GetUserClaimsMethodEndpoint</provider>
                <provider interface="dev.webfx.stack.com.bus.call.spi.BusCallEndpoint">dev.webfx.stack.authn.buscall.LogoutMethodEndpoint</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.buscall</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-com-bus-call</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-async</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authn.login</package>
                <package>dev.webfx.stack.authn.login.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.authn.login.spi.LoginServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-authn-login-buscall">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.call.spi.BusCallEndpoint">dev.webfx.stack.authn.login.buscall.GetLoginUiInputMethodEndpoint</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.authn.login.buscall.serial.LoginUiContextSerialCodec</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.buscall</package>
                <package>dev.webfx.stack.authn.login.buscall.serial</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-json</module>
                <module>webfx-stack-authn-login</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-com-serial</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-remote">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.spi.LoginServiceProvider">dev.webfx.stack.authn.login.spi.impl.remote.RemoteLoginServiceProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.spi.impl.remote</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-stack-authn-login</module>
                <module>webfx-stack-authn-login-buscall</module>
                <module>webfx-stack-com-bus-call</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-server-gateway">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authn.login.spi.impl.server.gateway</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-server-gateway-facebook">

            <exported-packages>
                <source-packages/>
                <resource-package>dev.webfx.stack.authn.login.spi.impl.server.gateway.facebook</resource-package>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.spi.impl.server.gateway.ServerLoginGatewayProvider">dev.webfx.stack.authn.login.spi.impl.server.gateway.facebook.FacebookServerLoginGatewayProvider</provider>
                <provider interface="dev.webfx.stack.conf.spi.ConfigurationConsumer">dev.webfx.stack.authn.login.spi.impl.server.gateway.facebook.FacebookServerLoginGatewayConfigurationConsumer</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.spi.impl.server.gateway.facebook</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-login-server-gateway</module>
                <module>webfx-stack-conf</module>
                <module>webfx-stack-conf-resource</module>
                <module>webfx-stack-push-server</module>
                <module>webfx-stack-routing-router</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-server-gateway-google">

            <exported-packages>
                <source-packages/>
                <resource-package>dev.webfx.stack.authn.login.spi.impl.server.gateway.google</resource-package>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.spi.impl.server.gateway.ServerLoginGatewayProvider">dev.webfx.stack.authn.login.spi.impl.server.gateway.google.GoogleServerLoginGatewayProvider</provider>
                <provider interface="dev.webfx.stack.conf.spi.ConfigurationConsumer">dev.webfx.stack.authn.login.spi.impl.server.gateway.google.GoogleServerLoginGatewayConfigurationConsumer</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.spi.impl.server.gateway.google</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-login-server-gateway</module>
                <module>webfx-stack-authn-oauth2</module>
                <module>webfx-stack-conf</module>
                <module>webfx-stack-conf-resource</module>
                <module>webfx-stack-push-server</module>
                <module>webfx-stack-routing-router</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-server-gateway-mojoauth">

            <exported-packages>
                <source-packages/>
                <resource-package>dev.webfx.stack.authn.login.spi.impl.server.gateway.mojoauth</resource-package>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.spi.impl.server.gateway.ServerLoginGatewayProvider">dev.webfx.stack.authn.login.spi.impl.server.gateway.mojoauth.MojoAuthServerLoginGatewayProvider</provider>
                <provider interface="dev.webfx.stack.conf.spi.ConfigurationConsumer">dev.webfx.stack.authn.login.spi.impl.server.gateway.mojoauth.MojoAuthServerLoginGatewayConfigurationConsumer</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.spi.impl.server.gateway.mojoauth</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-login-server-gateway</module>
                <module>webfx-stack-conf</module>
                <module>webfx-stack-conf-resource</module>
                <module>webfx-stack-push-server</module>
                <module>webfx-stack-routing-router</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-server-portal">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.spi.LoginServiceProvider">dev.webfx.stack.authn.login.spi.impl.server.portal.ServerLoginPortalProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.spi.impl.server.portal</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-authn-login</module>
                <module>webfx-stack-authn-login-server-gateway</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.authn.login.spi.impl.server.gateway.ServerLoginGatewayProvider</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-authn-login-ui">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui</package>
                <package>dev.webfx.stack.authn.login.ui.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.authn.login.ui.spi.UiLoginServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-authn-login-ui-gateway">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.gateway</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-stack-ui-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-ui-gateway-facebook">

            <exported-packages>
                <source-packages/>
                <resource-package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.facebook</resource-package>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.ui.spi.impl.gateway.UiLoginGatewayProvider">dev.webfx.stack.authn.login.ui.spi.impl.gateway.facebook.FacebookUiLoginGatewayProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.facebook</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-platform-resource</module>
                <module>webfx-stack-authn-login-ui-gateway</module>
                <module>webfx-stack-authn-login-ui-gateway-webviewbased</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-ui-gateway-google">

            <exported-packages>
                <source-packages/>
                <resource-package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.google</resource-package>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.ui.spi.impl.gateway.UiLoginGatewayProvider">dev.webfx.stack.authn.login.ui.spi.impl.gateway.google.GoogleUiLoginGatewayProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.google</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-platform-resource</module>
                <module>webfx-stack-authn-login-ui-gateway</module>
                <module>webfx-stack-authn-login-ui-gateway-webviewbased</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-ui-gateway-mojoauth">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.ui.spi.impl.gateway.UiLoginGatewayProvider">dev.webfx.stack.authn.login.ui.spi.impl.gateway.mojoauth.MojoAuthUiLoginGatewayProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.mojoauth</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-stack-authn-login-ui-gateway</module>
                <module>webfx-stack-authn-login-ui-gateway-webviewbased</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-ui-gateway-password">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.ui.spi.impl.gateway.UiLoginGatewayProvider">dev.webfx.stack.authn.login.ui.spi.impl.gateway.password.PasswordUiLoginGatewayProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.password</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-console</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-login-ui-gateway</module>
                <module>webfx-stack-i18n</module>
                <module>webfx-stack-ui-controls</module>
                <module>webfx-stack-ui-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-ui-gateway-webviewbased">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.webview</package>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.webview.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-javafxweb-emul</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-authn-login</module>
                <module>webfx-stack-authn-login-ui-gateway</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.authn.login.ui.spi.impl.gateway.webview.spi.LoginWebViewProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-authn-login-ui-gateway-webviewbased-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.ui.spi.impl.gateway.webview.spi.LoginWebViewProvider">dev.webfx.stack.authn.login.ui.spi.impl.gateway.webview.spi.impl.gwt.GwtLoginWebViewProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.webview.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-kit-javafxweb-emul</module>
                <module>webfx-stack-authn-login-ui-gateway-webviewbased</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-ui-gateway-webviewbased-openjfx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.ui.spi.impl.gateway.webview.spi.LoginWebViewProvider">dev.webfx.stack.authn.login.ui.spi.impl.gateway.webview.spi.impl.openjfx.FXLoginWebViewProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.gateway.webview.spi.impl.openjfx</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.xml</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-javafxweb-emul</module>
                <module>webfx-stack-authn-login-ui-gateway-webviewbased</module>
                <module>webfx-stack-ui-controls</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-login-ui-portal">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.login.ui.spi.UiLoginServiceProvider">dev.webfx.stack.authn.login.ui.spi.impl.portal.UiLoginPortalProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.login.ui.spi.impl.portal</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-authn-login-ui</module>
                <module>webfx-stack-authn-login-ui-gateway</module>
                <module>webfx-stack-ui-util</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.authn.login.ui.spi.impl.gateway.UiLoginGatewayProvider</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-authn-logout-client">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authn.logout.client.operation</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-ui-operation</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-logout-server">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authn.logout.server</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-stack-push-server</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-oauth2">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authn.oauth2</package>
                <package>dev.webfx.stack.authn.oauth2.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.authn.oauth2.spi.OAuth2Provider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-authn-oauth2-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <undetected-module>io-vertx-core</undetected-module>
                </used-by-source-modules>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.oauth2.spi.OAuth2Provider">dev.webfx.stack.authn.oauth2.spi.impl.vertx.VertxOAuth2Provider</provider>
            </providers>

            <required-libraries>
                <library artifact="io.vertx:vertx-auth-oauth2:4.3.4" name="io-vertx-auth-oauth2">
                    <exported-packages>
                        <package>io.vertx.ext.auth.oauth2</package>
                        <package>io.vertx.ext.auth.oauth2.providers</package>
                    </exported-packages>
                </library>
            </required-libraries>

            <source-packages>
                <package>dev.webfx.stack.authn.oauth2.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-auth-oauth2</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-vertx-common</module>
                <module>webfx-stack-authn-oauth2</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-remote">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.spi.AuthenticationServiceProvider">dev.webfx.stack.authn.spi.impl.remote.RemoteAuthenticationServiceProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.spi.impl.remote</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-buscall</module>
                <module>webfx-stack-com-bus-call</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-server-gateway">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authn.server.gateway.spi</package>
                <package>dev.webfx.stack.authn.server.gateway.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-logout-server</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-server-gateway-facebook">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.server.gateway.spi.ServerAuthenticationGatewayProvider">dev.webfx.stack.authn.server.gateway.spi.impl.facebook.FacebookServerAuthenticationGatewayProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.server.gateway.spi.impl.facebook</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-fetch</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-login-server-gateway-facebook</module>
                <module>webfx-stack-authn-server-gateway</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-server-gateway-google">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.server.gateway.spi.ServerAuthenticationGatewayProvider">dev.webfx.stack.authn.server.gateway.spi.impl.google.GoogleServerAuthenticationGatewayProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.server.gateway.spi.impl.google</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-server-gateway</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-server-gateway-mojoauth">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.authn.server.gateway.spi.ServerAuthenticationGatewayProvider">dev.webfx.stack.authn.server.gateway.spi.mojoauth.MojoAuthServerAuthenticationGatewayProvider</provider>
            </providers>

            <required-libraries>
                <library artifact="com.mojoauth.sdk:java-sdk:1.1.0">

                    <exported-packages>
                        <package>com.mojoauth.sdk.util</package>
                        <package>com.mojoauth.sdk.models.responsemodels</package>
                        <package>com.mojoauth.sdk.helper</package>
                        <package>com.mojoauth.sdk.api</package>
                    </exported-packages>

                </library>
            </required-libraries>

            <source-packages>
                <package>dev.webfx.stack.authn.server.gateway.spi.mojoauth</package>
            </source-packages>

            <used-by-source-modules>
                <module>java-sdk</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-login-server-gateway-mojoauth</module>
                <module>webfx-stack-authn-server-gateway</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-authn-server-portal">

            <module-auto-injection-conditions>
                <if-uses-java-package>dev.webfx.stack.session.state.server</if-uses-java-package>
                <if-uses-java-package>dev.webfx.stack.authn</if-uses-java-package>
            </module-auto-injection-conditions>

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationJob">dev.webfx.stack.authn.spi.impl.server.ServerAuthenticationJob</provider>
                <provider interface="dev.webfx.stack.authn.spi.AuthenticationServiceProvider">dev.webfx.stack.authn.spi.impl.server.portal.ServerAuthenticationPortalProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authn.spi.impl.server</package>
                <package>dev.webfx.stack.authn.spi.impl.server.portal</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-server-gateway</module>
                <module>webfx-stack-session-state-server</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.authn.server.gateway.spi.ServerAuthenticationGatewayProvider</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-authz-client">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.authz.client</package>
                <package>dev.webfx.stack.authz.client.factory</package>
                <package>dev.webfx.stack.authz.client.operation</package>
                <package>dev.webfx.stack.authz.client.spi</package>
                <package>dev.webfx.stack.authz.client.spi.impl</package>
                <package>dev.webfx.stack.authz.client.spi.impl.inmemory</package>
                <package>dev.webfx.stack.authz.client.spi.impl.inmemory.parser</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-session-state-client-fx</module>
                <module>webfx-stack-ui-operation</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.authz.client.spi.AuthorizationClientServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-authz-server">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationJob">dev.webfx.stack.authz.server.AuthorizationServerJob</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.authz.server</package>
                <package>dev.webfx.stack.authz.server.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-session-state-server</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.authz.server.spi.AuthorizationServerServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-com-bus">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-async</module>
                </used-by-source-modules>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.conf.spi.ConfigurationConsumer">dev.webfx.stack.com.bus.spi.impl.BusOptionsConfigurationConsumer</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.com.bus</package>
                <package>dev.webfx.stack.com.bus.spi</package>
                <package>dev.webfx.stack.com.bus.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-conf</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.com.bus.spi.BusServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-com-bus-call">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.com.bus.call.BusCallModuleBooter</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.com.bus.call.BusCallArgument$ProvidedSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.com.bus.call.BusCallResult$ProvidedSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.com.bus.call.SerializableAsyncResult$ProvidedSerialCodec</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.call</package>
                <package>dev.webfx.stack.com.bus.call.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.com.bus.call.spi.BusCallEndpoint</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-com-bus-call-job">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationJob">dev.webfx.stack.com.bus.call.job.BusCallServerJob</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.call.job</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-console</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-call</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-bus-json">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.json</package>
            </source-packages>

            <used-by-source-modules/>

        </project>

        <project name="webfx-stack-com-bus-json-client">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.com.bus.spi.impl.json.client.JsonClientBusModuleBooter</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.json.client</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-json</module>
                <module>webfx-stack-session-state</module>
                <module>webfx-stack-session-state-client</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-bus-json-client-websocket">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.json.client.websocket</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-json-client</module>
                <module>webfx-stack-com-websocket</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-bus-json-client-websocket-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.spi.BusServiceProvider">dev.webfx.stack.com.bus.spi.impl.json.client.websocket.java.JavaWebsocketBusServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.json.client.websocket.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-windowlocation</module>
                <module>webfx-platform-windowlocation-java</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-json-client-websocket</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-bus-json-client-websocket-web">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.spi.BusServiceProvider">dev.webfx.stack.com.bus.spi.impl.json.client.websocket.web.WebWebsocketBusServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.json.client.websocket.web</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-windowlocation</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-json-client-websocket</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-bus-json-server">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.json.server</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-json</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-state</module>
                <module>webfx-stack-session-state-server</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-bus-json-vertx">

            <exported-packages>
                <source-packages/>
                <resource-package>dev.webfx.stack.com.bus.spi.impl.json.vertx</resource-package>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
                <!-- This module can't work by its own without the Vert.x http server -->
                <plugin-module>webfx-stack-http-server-vertx</plugin-module>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.conf.spi.ConfigurationConsumer">dev.webfx.stack.com.bus.spi.impl.json.vertx.VertxBusConfigurationConsumer</provider>
                <provider interface="dev.webfx.stack.com.bus.spi.BusServiceProvider">dev.webfx.stack.com.bus.spi.impl.json.vertx.VertxBusServiceProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.json.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>io-vertx-eventbusbridge-common</module>
                <module>io-vertx-web</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-platform-vertx-common</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-json</module>
                <module>webfx-stack-com-bus-json-server</module>
                <module>webfx-stack-conf</module>
                <module>webfx-stack-conf-resource</module>
                <module>webfx-stack-session-state</module>
                <module>webfx-stack-session-vertx</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-bus-simple">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.spi.BusServiceProvider">dev.webfx.stack.com.bus.spi.impl.simple.SimpleBusServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.simple</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-stack-com-bus</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-serial">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.com.serial.SerialCodecModuleBooter</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.com.serial.spi.impl.ProvidedBatchSerialCodec</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.serial</package>
                <package>dev.webfx.stack.com.serial.spi</package>
                <package>dev.webfx.stack.com.serial.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.com.serial.spi.SerialCodec</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-com-websocket">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.websocket</package>
                <package>dev.webfx.stack.com.websocket.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.com.websocket.spi.WebSocketServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-com-websocket-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.websocket.spi.WebSocketServiceProvider">dev.webfx.stack.com.websocket.spi.impl.gwt.GwtWebSocketServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <html>
                <body order="-10">
                    <script charset="utf-8" src="dev/webfx/stack/com/websocket/spi/impl/gwt/sockjs.min.js" type="text/javascript"/>
                    <script charset="utf-8" src="dev/webfx/stack/com/websocket/spi/impl/gwt/sockjs-quickstart.js" type="text/javascript"/>
                </body>
            </html>

            <source-packages>
                <package>dev.webfx.stack.com.websocket.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-com-websocket</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-websocket-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.websocket.spi.WebSocketServiceProvider">dev.webfx.stack.com.websocket.spi.impl.java.JavaWebSocketServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.websocket.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>Java-WebSocket</module>
                <module>java-nio-emul</module>
                <module>java.base</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-com-websocket</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-conf">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-async</module>
                    <module transitive="true">webfx-platform-util</module>
                </used-by-source-modules>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.conf.spi.impl.ConfigurationModuleBooter</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.conf</package>
                <package>dev.webfx.stack.conf.spi</package>
                <package>dev.webfx.stack.conf.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.conf.spi.ConfigurationServiceProvider</required-service>
                <optional-service>dev.webfx.stack.conf.spi.ConfigurationFormat</optional-service>
                <optional-service>dev.webfx.stack.conf.spi.ConfigurationSupplier</optional-service>
                <optional-service>dev.webfx.stack.conf.spi.ConfigurationConsumer</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-conf-env-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.conf.spi.impl.java.env</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-conf</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-conf-file-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.conf.spi.impl.java.file</package>
            </source-packages>

            <used-by-source-modules>
                <module>java-nio-emul</module>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-conf</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-conf-format-json">

            <module-auto-injection-conditions>
                <if-uses-java-package>dev.webfx.stack.conf</if-uses-java-package>
                <if-uses-java-package>dev.webfx.platform.json</if-uses-java-package>
            </module-auto-injection-conditions>

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.conf.spi.ConfigurationFormat">dev.webfx.stack.conf.spi.impl.format.json.JsonConfigurationFormat</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.conf.spi.impl.format.json</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-conf</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-conf-localstorage">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.conf.spi.ConfigurationSupplier">dev.webfx.stack.conf.spi.impl.localstorage.LocalStorageConfigurationSupplier</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.conf.spi.impl.localstorage</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-storage</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-conf</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-conf-resource">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.conf.spi.impl.resource</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-resource</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-conf</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-datascope">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.datascope.aggregate.AggregateScope$ProvidedSerialCodec</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.datascope</package>
                <package>dev.webfx.stack.db.datascope.aggregate</package>
                <package>dev.webfx.stack.db.datascope.schema</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-com-serial</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-datasource">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.datasource</package>
                <package>dev.webfx.stack.db.datasource.jdbc</package>
                <package>dev.webfx.stack.db.datasource.spi</package>
                <package>dev.webfx.stack.db.datasource.spi.simple</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.db.datasource.spi.LocalDataSourceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-db-query">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-stack-db-datascope</module>
                </used-by-source-modules>
            </dependencies>

            <reflect>
                <array-new-instance>
                    <class>dev.webfx.stack.db.query.QueryResult</class>
                </array-new-instance>
            </reflect>

            <source-packages>
                <package>dev.webfx.stack.db.query</package>
                <package>dev.webfx.stack.db.query.spi</package>
                <package>dev.webfx.stack.db.query.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-datasource</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.db.query.spi.QueryServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-db-query-buscall">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.call.spi.BusCallEndpoint">dev.webfx.stack.db.query.buscall.ExecuteQueryMethodEndpoint</provider>
                <provider interface="dev.webfx.stack.com.bus.call.spi.BusCallEndpoint">dev.webfx.stack.db.query.buscall.ExecuteQueryBatchMethodEndpoint</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.query.buscall.serial.QueryArgumentSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.query.buscall.serial.QueryResultSerialCodec</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.db.query.buscall</package>
                <package>dev.webfx.stack.db.query.buscall.serial</package>
                <package>dev.webfx.stack.db.query.buscall.serial.compression</package>
                <package>dev.webfx.stack.db.query.buscall.serial.compression.repeat</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-db-query</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-query-remote">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.query.spi.QueryServiceProvider">dev.webfx.stack.db.query.spi.impl.remote.RemoteQueryServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.query.spi.impl.remote</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-query-buscall</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querypush">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-stack-db-query</module>
                    <module transitive="true">webfx-platform-async</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.querypush</package>
                <package>dev.webfx.stack.db.querypush.diff</package>
                <package>dev.webfx.stack.db.querypush.diff.impl</package>
                <package>dev.webfx.stack.db.querypush.spi</package>
                <package>dev.webfx.stack.db.querypush.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-query</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.db.querypush.spi.QueryPushServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-db-querypush-buscall">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.call.spi.BusCallEndpoint">dev.webfx.stack.db.querypush.buscall.ExecuteQueryPushMethodEndpoint</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.querypush.buscall.serial.QueryPushArgumentSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.querypush.buscall.serial.QueryPushResultSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.querypush.buscall.serial.QueryResultTranslationSerialCodec</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.db.querypush.buscall</package>
                <package>dev.webfx.stack.db.querypush.buscall.serial</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-json</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-db-querypush</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querypush-client">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.querypush.client</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-db-querypush-buscall</module>
                <module>webfx-stack-push-client</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querypush-client-simple">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.db.querypush.client.simple.SimpleQueryPushClientJob</provider>
                <provider interface="dev.webfx.stack.db.querypush.spi.QueryPushServiceProvider">dev.webfx.stack.db.querypush.client.simple.SimpleQueryPushClientServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.querypush.client.simple</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-boot</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-db-querypush-client</module>
                <module>webfx-stack-db-querypush-remote</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querypush-remote">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.querypush.spi.impl.remote</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-db-querypush-buscall</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querypush-server">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.submit.listener.SubmitListener">dev.webfx.stack.db.querypush.server.QueryPushServerService$ProvidedSubmitListener</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.querypush.server</package>
                <package>dev.webfx.stack.db.querypush.server.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-db-querypush-buscall</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-db-submit-listener</module>
                <module>webfx-stack-push-server</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querypush-server-simple">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.querypush.spi.QueryPushServiceProvider">dev.webfx.stack.db.querypush.server.spi.impl.simple.SimpleInMemoryServerQueryPushServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.querypush.server.spi.impl.simple</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-db-querypush-server</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querysubmit-java-jdbc">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.query.spi.QueryServiceProvider">dev.webfx.stack.db.query.spi.impl.jdbc.JdbcQueryServiceProvider</provider>
                <provider interface="dev.webfx.stack.db.submit.spi.SubmitServiceProvider">dev.webfx.stack.db.submit.spi.impl.jdbc.JdbcSubmitServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules>
                    <module optional="true">com-zaxxer-hikari</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.query.spi.impl.jdbc</package>
                <package>dev.webfx.stack.db.querysubmit.jdbc</package>
                <package>dev.webfx.stack.db.submit.spi.impl.jdbc</package>
            </source-packages>

            <used-by-source-modules>
                <module>com-zaxxer-hikari</module>
                <module>java.base</module>
                <module>java.sql</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-query-remote</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-db-submit-remote</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querysubmit-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.query.spi.QueryServiceProvider">dev.webfx.stack.db.query.spi.impl.vertx.VertxQueryServiceProvider</provider>
                <provider interface="dev.webfx.stack.db.submit.spi.SubmitServiceProvider">dev.webfx.stack.db.submit.spi.impl.vertx.VertxSubmitServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
                <plugin-module>java.sql</plugin-module>                <!-- Module required by vertx-mysql-postgresql-client-jasync -->
                <!-- Additional module required at runtime when authenticating to a postgres database in a docker container -->
                <plugin-module>com-ongres-scram-client</plugin-module>
            </dependencies>


            <source-packages>
                <package>dev.webfx.stack.db.query.spi.impl.vertx</package>
                <package>dev.webfx.stack.db.querysubmit</package>
                <package>dev.webfx.stack.db.submit.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-client-jdbc</module>
                <module>io-vertx-client-sql</module>
                <module>io-vertx-client-sql-pg</module>
                <module>io-vertx-core</module>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-platform-vertx-common</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-db-submit-listener</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-submit">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-stack-db-datascope</module>
                    <module transitive="true">webfx-platform-async</module>
                </used-by-source-modules>
            </dependencies>

            <reflect>
                <array-new-instance>
                    <class>dev.webfx.stack.db.submit.SubmitResult</class>
                </array-new-instance>
            </reflect>

            <source-packages>
                <package>dev.webfx.stack.db.submit</package>
                <package>dev.webfx.stack.db.submit.spi</package>
                <package>dev.webfx.stack.db.submit.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-datasource</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.db.submit.spi.SubmitServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-db-submit-buscall">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.call.spi.BusCallEndpoint">dev.webfx.stack.db.submit.buscall.ExecuteSubmitMethodEndpoint</provider>
                <provider interface="dev.webfx.stack.com.bus.call.spi.BusCallEndpoint">dev.webfx.stack.db.submit.buscall.ExecuteSubmitBatchMethodEndpoint</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.submit.buscall.serial.SubmitArgumentSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.submit.buscall.serial.SubmitResultSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.submit.buscall.serial.GeneratedKeyBatchIndexSerialCodec</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.db.submit.buscall</package>
                <package>dev.webfx.stack.db.submit.buscall.serial</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-db-submit</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-submit-listener">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.db.submit.listener.SubmitListenerModuleBooter</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.submit.listener</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-submit</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.db.submit.listener.SubmitListener</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-db-submit-remote">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.submit.spi.SubmitServiceProvider">dev.webfx.stack.db.submit.spi.impl.remote.RemoteSubmitServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.submit.spi.impl.remote</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-db-submit-buscall</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-http-server-vertx">

            <exported-packages>
                <source-packages/>
                <resource-package>dev.webfx.stack.http.server.vertx</resource-package>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.conf.spi.ConfigurationConsumer">dev.webfx.stack.http.server.vertx.VertxHttpConfigurationConsumer</provider>
                <provider interface="dev.webfx.stack.conf.spi.ConfigurationSupplier">dev.webfx.stack.http.server.vertx.VertxHttpConfigurationSupplier</provider>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationJob">dev.webfx.stack.http.server.vertx.VertxHttpStarterJob</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.http.server.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>io-vertx-web</module>
                <module>java-nio-emul</module>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-platform-vertx-common</module>
                <module>webfx-stack-conf</module>
                <module>webfx-stack-conf-resource</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.conf.spi.ConfigurationConsumer</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-i18n">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-util</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.i18n</package>
                <package>dev.webfx.stack.i18n.operations</package>
                <package>dev.webfx.stack.i18n.spi</package>
                <package>dev.webfx.stack.i18n.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-ui-fxraiser</module>
                <module>webfx-stack-ui-operation</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.i18n.spi.I18nProvider</required-service>
                <optional-service>dev.webfx.stack.i18n.operations.ChangeLanguageRequestEmitter</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-i18n-json">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <undetected-module>javafx-base</undetected-module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.i18n.spi.impl.json</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-resource</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-i18n</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-datasourcemodel-service">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.datasourcemodel.service</package>
                <package>dev.webfx.stack.orm.datasourcemodel.service.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-orm-domainmodel</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.orm.datasourcemodel.service.spi.DataSourceModelProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-orm-domainmodel">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.domainmodel</package>
                <package>dev.webfx.stack.orm.domainmodel.builder</package>
                <package>dev.webfx.stack.orm.domainmodel.formatter</package>
                <package>dev.webfx.stack.orm.domainmodel.lciimpl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-label</module>
                <module>webfx-extras-type</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-orm-dql</module>
                <module>webfx-stack-orm-expression</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-domainmodel-activity">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <undetected-module>webfx-kit-javafxbase-emul</undetected-module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.domainmodel.activity.domain</package>
                <package>dev.webfx.stack.orm.domainmodel.activity.domain.impl</package>
                <package>dev.webfx.stack.orm.domainmodel.activity.domainpresentation</package>
                <package>dev.webfx.stack.orm.domainmodel.activity.domainpresentation.impl</package>
                <package>dev.webfx.stack.orm.domainmodel.activity.domainpresentationlogic.impl</package>
                <package>dev.webfx.stack.orm.domainmodel.activity.viewdomain</package>
                <package>dev.webfx.stack.orm.domainmodel.activity.viewdomain.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-util</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-routing-activity</module>
                <module>webfx-stack-routing-uirouter</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-domainmodel-service">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.domainmodel.service</package>
                <package>dev.webfx.stack.orm.domainmodel.service.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-label</module>
                <module>webfx-extras-type</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-orm-domainmodel</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.orm.domainmodel.service.spi.DomainModelProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-orm-dql">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.dql</package>
                <package>dev.webfx.stack.orm.dql.sqlcompiler</package>
                <package>dev.webfx.stack.orm.dql.sqlcompiler.lci</package>
                <package>dev.webfx.stack.orm.dql.sqlcompiler.lci.mock</package>
                <package>dev.webfx.stack.orm.dql.sqlcompiler.mapping</package>
                <package>dev.webfx.stack.orm.dql.sqlcompiler.sql</package>
                <package>dev.webfx.stack.orm.dql.sqlcompiler.sql.dbms</package>
                <package>dev.webfx.stack.orm.dql.sqlcompiler.terms</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-type</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-orm-expression</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-dql-query-interceptor">

            <module-auto-injection-conditions>
                <if-uses-java-package>dev.webfx.stack.db.query</if-uses-java-package>
                <if-uses-java-package>dev.webfx.stack.orm.domainmodel</if-uses-java-package>
            </module-auto-injection-conditions>

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.orm.dql.query.interceptor.DqlQueryInterceptorModuleBooter</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.dql.query.interceptor</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-orm-datasourcemodel-service</module>
                <module>webfx-stack-orm-domainmodel</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-dql-querypush-interceptor">

            <module-auto-injection-conditions>
                <if-uses-java-package>dev.webfx.stack.db.querypush</if-uses-java-package>
                <if-uses-java-package>dev.webfx.stack.orm.domainmodel</if-uses-java-package>
            </module-auto-injection-conditions>

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.orm.dql.querypush.interceptor.DqlQueryPushInterceptorModuleBooter</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.dql.querypush.interceptor</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-orm-datasourcemodel-service</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-orm-expression</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-dql-submit-interceptor">

            <module-auto-injection-conditions>
                <if-uses-java-package>dev.webfx.stack.db.submit</if-uses-java-package>
                <if-uses-java-package>dev.webfx.stack.orm.domainmodel</if-uses-java-package>
            </module-auto-injection-conditions>

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.orm.dql.submit.interceptor.DqlSubmitInterceptorModuleBooter</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.dql.submit.interceptor</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-orm-datasourcemodel-service</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-orm-expression</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-entity">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-async</module>
                    <module transitive="true">webfx-stack-db-datascope</module>
                    <module transitive="true">webfx-stack-db-query</module>
                    <module transitive="true">webfx-stack-db-submit</module>
                    <module transitive="true">webfx-stack-orm-domainmodel</module>
                    <module transitive="true">webfx-stack-orm-dql</module>
                    <module transitive="true">webfx-stack-orm-expression</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.entity</package>
                <package>dev.webfx.stack.orm.entity.impl</package>
                <package>dev.webfx.stack.orm.entity.lciimpl</package>
                <package>dev.webfx.stack.orm.entity.query_result_to_entities</package>
                <package>dev.webfx.stack.orm.entity.result</package>
                <package>dev.webfx.stack.orm.entity.result.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-type</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-orm-datasourcemodel-service</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-orm-dql</module>
                <module>webfx-stack-orm-expression</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.orm.entity.EntityFactoryProvider</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-orm-entity-controls">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-stack-ui-controls</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.entity.controls.entity.selector</package>
                <package>dev.webfx.stack.orm.entity.controls.entity.sheet</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-cell</module>
                <module>webfx-extras-imagestore</module>
                <module>webfx-extras-label</module>
                <module>webfx-extras-materialdesign</module>
                <module>webfx-extras-type</module>
                <module>webfx-extras-visual</module>
                <module>webfx-extras-visual-grid</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-orm-dql</module>
                <module>webfx-stack-orm-entity</module>
                <module>webfx-stack-orm-expression</module>
                <module>webfx-stack-orm-reactive-entities</module>
                <module>webfx-stack-orm-reactive-visual</module>
                <module>webfx-stack-ui-controls</module>
                <module>webfx-stack-ui-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-expression">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.expression</package>
                <package>dev.webfx.stack.orm.expression.builder</package>
                <package>dev.webfx.stack.orm.expression.builder.terms</package>
                <package>dev.webfx.stack.orm.expression.lci</package>
                <package>dev.webfx.stack.orm.expression.parser</package>
                <package>dev.webfx.stack.orm.expression.parser.javacup</package>
                <package>dev.webfx.stack.orm.expression.parser.jflex</package>
                <package>dev.webfx.stack.orm.expression.parser.lci</package>
                <package>dev.webfx.stack.orm.expression.parser.lci.mock</package>
                <package>dev.webfx.stack.orm.expression.terms</package>
                <package>dev.webfx.stack.orm.expression.terms.function</package>
                <package>dev.webfx.stack.orm.expression.terms.function.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-type</module>
                <module>webfx-lib-javacupruntime</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-reactive-call">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.reactive.call</package>
                <package>dev.webfx.stack.orm.reactive.call.query</package>
                <package>dev.webfx.stack.orm.reactive.call.query.push</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-session-state-client-fx</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-reactive-dql">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.reactive.dql.query</package>
                <package>dev.webfx.stack.orm.reactive.dql.querypush</package>
                <package>dev.webfx.stack.orm.reactive.dql.statement</package>
                <package>dev.webfx.stack.orm.reactive.dql.statement.conventions</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-orm-dql</module>
                <module>webfx-stack-orm-entity</module>
                <module>webfx-stack-orm-expression</module>
                <module>webfx-stack-orm-reactive-call</module>
                <module>webfx-stack-routing-activity</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-reactive-entities">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.reactive.entities.dql_to_entities</package>
                <package>dev.webfx.stack.orm.reactive.entities.entities_to_grid</package>
                <package>dev.webfx.stack.orm.reactive.entities.entities_to_objects</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-type</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-orm-dql</module>
                <module>webfx-stack-orm-entity</module>
                <module>webfx-stack-orm-expression</module>
                <module>webfx-stack-orm-reactive-dql</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-orm-reactive-visual">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-stack-orm-entity</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.reactive.mapping.entities_to_visual</package>
                <package>dev.webfx.stack.orm.reactive.mapping.entities_to_visual.conventions</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-cell</module>
                <module>webfx-extras-label</module>
                <module>webfx-extras-type</module>
                <module>webfx-extras-visual</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-i18n</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-orm-entity</module>
                <module>webfx-stack-orm-expression</module>
                <module>webfx-stack-orm-reactive-dql</module>
                <module>webfx-stack-orm-reactive-entities</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-push">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.push</package>
            </source-packages>

            <used-by-source-modules/>

        </project>

        <project name="webfx-stack-push-client">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <undetected-module>javafx-base</undetected-module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.push.client</package>
                <package>dev.webfx.stack.orm.push.client.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-push</module>
                <module>webfx-stack-session-state-client-fx</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.orm.push.client.spi.PushClientServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-push-client-simple">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.orm.push.client.spi.PushClientServiceProvider">dev.webfx.stack.orm.push.client.spi.impl.simple.SimplePushClientServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.orm.push.client.spi.impl.simple</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-console</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-push</module>
                <module>webfx-stack-push-client</module>
                <module>webfx-stack-session-state-client</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-push-server">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.push.server</package>
                <package>dev.webfx.stack.push.server.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-push</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.push.server.spi.PushServerServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-push-server-liveclient-interceptor">

            <!-- Injection not working in Modality. TODO: FIX THIS PB IN WEBFX CLI -->
            <module-auto-injection-conditions>
                <if-uses-java-package>dev.webfx.stack.push.server</if-uses-java-package>
                <if-uses-java-package>dev.webfx.stack.com.bus.spi.impl.json.server</if-uses-java-package>
            </module-auto-injection-conditions>

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.push.server.liveclient.interceptor.LiveClientInterceptorModuleBooter</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.push.server.liveclient.interceptor</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-boot</module>
                <module>webfx-stack-com-bus-json-server</module>
                <module>webfx-stack-push-server</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-push-server-simple">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.push.server.spi.PushServerServiceProvider">dev.webfx.stack.push.server.spi.impl.simple.SimplePushServerServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.push.server.spi.impl.simple</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-push</module>
                <module>webfx-stack-push-server</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-routing-activity">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.routing.activity</package>
                <package>dev.webfx.stack.routing.activity.impl</package>
                <package>dev.webfx.stack.routing.activity.impl.composition</package>
                <package>dev.webfx.stack.routing.activity.impl.composition.impl</package>
                <package>dev.webfx.stack.routing.activity.impl.elementals.activeproperty</package>
                <package>dev.webfx.stack.routing.activity.impl.elementals.activeproperty.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-routing-router">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-stack-session</module>
                    <module transitive="true">webfx-platform-json</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.routing.router</package>
                <package>dev.webfx.stack.routing.router.spi</package>
                <package>dev.webfx.stack.routing.router.util</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-session</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.routing.router.spi.RouterFactoryProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-routing-router-client">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.routing.router.spi.RouterFactoryProvider">dev.webfx.stack.routing.router.spi.impl.client.ClientRouterFactoryProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.routing.router.auth</package>
                <package>dev.webfx.stack.routing.router.auth.authz</package>
                <package>dev.webfx.stack.routing.router.auth.impl</package>
                <package>dev.webfx.stack.routing.router.spi.impl.client</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-authz-client</module>
                <module>webfx-stack-routing-router</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-state-client</module>
                <module>webfx-stack-session-state-client-fx</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-routing-router-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <undetected-module>io-vertx-core</undetected-module>
                </used-by-source-modules>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.routing.router.spi.RouterFactoryProvider">dev.webfx.stack.routing.router.spi.impl.vertx.VertxRouterFactoryProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.routing.router.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-web</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-vertx-common</module>
                <module>webfx-stack-routing-router</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-vertx</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-routing-uirouter">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-stack-routing-activity</module>
                    <module transitive="true">webfx-stack-routing-router-client</module>
                    <module transitive="true">webfx-platform-util</module>
                    <module transitive="true">webfx-platform-windowhistory</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.routing.uirouter</package>
                <package>dev.webfx.stack.routing.uirouter.activity.presentation</package>
                <package>dev.webfx.stack.routing.uirouter.activity.presentation.impl</package>
                <package>dev.webfx.stack.routing.uirouter.activity.presentation.logic</package>
                <package>dev.webfx.stack.routing.uirouter.activity.presentation.logic.impl</package>
                <package>dev.webfx.stack.routing.uirouter.activity.presentation.view</package>
                <package>dev.webfx.stack.routing.uirouter.activity.presentation.view.impl</package>
                <package>dev.webfx.stack.routing.uirouter.activity.uiroute</package>
                <package>dev.webfx.stack.routing.uirouter.activity.uiroute.impl</package>
                <package>dev.webfx.stack.routing.uirouter.activity.view</package>
                <package>dev.webfx.stack.routing.uirouter.activity.view.impl</package>
                <package>dev.webfx.stack.routing.uirouter.impl</package>
                <package>dev.webfx.stack.routing.uirouter.operations</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-launcher</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-platform-windowhistory</module>
                <module>webfx-stack-routing-activity</module>
                <module>webfx-stack-routing-router</module>
                <module>webfx-stack-routing-router-client</module>
                <module>webfx-stack-session-state-client-fx</module>
                <module>webfx-stack-ui-operation</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.routing.uirouter.UiRoute</optional-service>
                <optional-service>dev.webfx.stack.routing.uirouter.operations.RouteRequestEmitter</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-session">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.session</package>
                <package>dev.webfx.stack.session.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.session.spi.SessionServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-session-client">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.session.spi.SessionServiceProvider">dev.webfx.stack.session.spi.impl.client.ClientSessionServiceProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.session.spi.impl.client</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-storage</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-session</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-session-state">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-async</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.session.state</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-json</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-session</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-session-state-client">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.session.state.client</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-launcher</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-storage</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-session-state-client-fx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.session.state.client.fx</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-state</module>
                <module>webfx-stack-session-state-client</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-session-state-server">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-async</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.session.state.server</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-stack-authn-logout-server</module>
                <module>webfx-stack-session</module>
                <module>webfx-stack-session-state</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-session-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <undetected-module>io-vertx-core</undetected-module>
                </used-by-source-modules>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.stack.session.spi.SessionServiceProvider">dev.webfx.stack.session.spi.impl.vertx.VertxSessionServiceProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.stack.session.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-web</module>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-vertx-common</module>
                <module>webfx-stack-session</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-ui-action">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.ui.action</package>
                <package>dev.webfx.stack.ui.action.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-i18n</module>
                <module>webfx-stack-ui-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-ui-controls">

            <exported-packages>
                <source-packages/>
                <resource-package>images.s16.controls</resource-package>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-stack-ui-action</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.ui.controls</package>
                <package>dev.webfx.stack.ui.controls.alert</package>
                <package>dev.webfx.stack.ui.controls.button</package>
                <package>dev.webfx.stack.ui.controls.dialog</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-imagestore</module>
                <module>webfx-extras-materialdesign</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-i18n</module>
                <module>webfx-stack-ui-action</module>
                <module>webfx-stack-ui-util</module>
                <module>webfx-stack-ui-validation</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-ui-fxraiser">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.ui.fxraiser</package>
                <package>dev.webfx.stack.ui.fxraiser.impl</package>
                <package>dev.webfx.stack.ui.fxraiser.impl.converters</package>
                <package>dev.webfx.stack.ui.fxraiser.impl.formatters</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-ui-fxraiser-json">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.stack.ui.fxraiser.json.JsonFXRaiserModuleBooter</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <module-auto-injection-conditions>
                <if-uses-java-package>dev.webfx.platform.json</if-uses-java-package>
                <if-uses-java-package>dev.webfx.stack.ui.fxraiser</if-uses-java-package>
            </module-auto-injection-conditions>

            <source-packages>
                <package>dev.webfx.stack.ui.fxraiser.json</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-ui-fxraiser</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-ui-operation">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.ui.operation</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-ui-operation-action">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-stack-ui-action</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.ui.operation.action</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-stack-authz-client</module>
                <module>webfx-stack-ui-action</module>
                <module>webfx-stack-ui-operation</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-ui-util">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.ui.util.anim</package>
                <package>dev.webfx.stack.ui.util.background</package>
                <package>dev.webfx.stack.ui.util.border</package>
                <package>dev.webfx.stack.ui.util.image</package>
                <package>dev.webfx.stack.ui.util.layout</package>
                <package>dev.webfx.stack.ui.util.paint</package>
                <package>dev.webfx.stack.ui.util.scene</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-extras-imagestore</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
                <module>webfx-kit-launcher</module>
                <module>webfx-kit-util</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-ui-validation">

            <exported-packages>
                <source-packages/>
                <resource-package>dev.webfx.stack.ui.validation.controlsfx.images</resource-package>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.ui.validation.controlsfx.control.decoration</package>
                <package>dev.webfx.stack.ui.validation.controlsfx.impl</package>
                <package>dev.webfx.stack.ui.validation.controlsfx.impl.skin</package>
                <package>dev.webfx.stack.ui.validation.controlsfx.tools</package>
                <package>dev.webfx.stack.ui.validation.controlsfx.validation</package>
                <package>dev.webfx.stack.ui.validation.controlsfx.validation.decoration</package>
                <package>dev.webfx.stack.ui.validation.mvvmfx</package>
                <package>dev.webfx.stack.ui.validation.mvvmfx.visualization</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-kit-javafxcontrols-emul</module>
                <module>webfx-kit-javafxgraphics-emul</module>
            </used-by-source-modules>

        </project>

        <usages>

            <java-package name="dev.webfx.platform.json">
                <module>webfx-platform-fetch</module>
                <module>webfx-platform-fetch-gwt</module>
                <module>webfx-platform-fetch-java</module>
                <module>webfx-platform-fetch-vertx</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-json-gwt</module>
                <module>webfx-platform-json-teavm</module>
                <module>webfx-platform-json-vertx</module>
                <module>webfx-platform-webassembly-teavm</module>
                <module>webfx-platform-webworker-java</module>
                <module>webfx-platform-windowhistory</module>
                <module>webfx-platform-windowhistory-gwt</module>
                <module>webfx-platform-windowhistory-web</module>
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-login-buscall</module>
                <module>webfx-stack-authn-server-gateway</module>
                <module>webfx-stack-authn-server-gateway-facebook</module>
                <module>webfx-stack-authn-server-gateway-google</module>
                <module>webfx-stack-authn-server-gateway-mojoauth</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-call</module>
                <module>webfx-stack-com-bus-json-client</module>
                <module>webfx-stack-com-bus-json-client-websocket</module>
                <module>webfx-stack-com-bus-json-server</module>
                <module>webfx-stack-com-bus-json-vertx</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-com-websocket</module>
                <module>webfx-stack-com-websocket-gwt</module>
                <module>webfx-stack-com-websocket-java</module>
                <module>webfx-stack-conf</module>
                <module>webfx-stack-conf-format-json</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-query-buscall</module>
                <module>webfx-stack-db-querypush-buscall</module>
                <module>webfx-stack-db-submit-buscall</module>
                <module>webfx-stack-i18n-json</module>
                <module>webfx-stack-orm-dql</module>
                <module>webfx-stack-orm-entity-controls</module>
                <module>webfx-stack-orm-expression</module>
                <module>webfx-stack-orm-reactive-dql</module>
                <module>webfx-stack-orm-reactive-entities</module>
                <module>webfx-stack-orm-reactive-visual</module>
                <module>webfx-stack-routing-router</module>
                <module>webfx-stack-routing-router-client</module>
                <module>webfx-stack-routing-router-vertx</module>
                <module>webfx-stack-routing-uirouter</module>
                <module>webfx-stack-session-client</module>
                <module>webfx-stack-session-state</module>
                <module>webfx-stack-ui-fxraiser-json</module>
                <module>webfx-stack-ui-util</module>
            </java-package>

            <java-package name="dev.webfx.stack.authn">
                <module>webfx-stack-authn</module>
                <module>webfx-stack-authn-buscall</module>
                <module>webfx-stack-authn-login-server-gateway-facebook</module>
                <module>webfx-stack-authn-login-server-gateway-google</module>
                <module>webfx-stack-authn-login-server-gateway-mojoauth</module>
                <module>webfx-stack-authn-login-ui-gateway-password</module>
                <module>webfx-stack-authn-logout-client</module>
                <module>webfx-stack-authn-remote</module>
                <module>webfx-stack-authn-server-gateway</module>
                <module>webfx-stack-authn-server-gateway-facebook</module>
                <module>webfx-stack-authn-server-gateway-google</module>
                <module>webfx-stack-authn-server-gateway-mojoauth</module>
                <module>webfx-stack-authn-server-portal</module>
            </java-package>

            <java-package name="dev.webfx.stack.com.bus.spi.impl.json.server">
                <module>webfx-stack-com-bus-json-vertx</module>
                <module>webfx-stack-push-server-liveclient-interceptor</module>
            </java-package>

            <java-package name="dev.webfx.stack.conf">
                <module>webfx-stack-authn-login-server-gateway-facebook</module>
                <module>webfx-stack-authn-login-server-gateway-google</module>
                <module>webfx-stack-authn-login-server-gateway-mojoauth</module>
                <module>webfx-stack-com-bus-json-vertx</module>
                <module>webfx-stack-conf</module>
                <module>webfx-stack-conf-file-java</module>
                <module>webfx-stack-conf-resource</module>
                <module>webfx-stack-http-server-vertx</module>
            </java-package>

            <java-package name="dev.webfx.stack.db.query">
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-query-buscall</module>
                <module>webfx-stack-db-query-remote</module>
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-db-querypush-server</module>
                <module>webfx-stack-db-querypush-server-simple</module>
                <module>webfx-stack-db-querysubmit-java-jdbc</module>
                <module>webfx-stack-db-querysubmit-vertx</module>
                <module>webfx-stack-orm-domainmodel-service</module>
                <module>webfx-stack-orm-dql-query-interceptor</module>
                <module>webfx-stack-orm-dql-querypush-interceptor</module>
                <module>webfx-stack-orm-entity</module>
                <module>webfx-stack-orm-reactive-call</module>
                <module>webfx-stack-orm-reactive-dql</module>
                <module>webfx-stack-orm-reactive-entities</module>
            </java-package>

            <java-package name="dev.webfx.stack.db.querypush">
                <module>webfx-stack-db-querypush</module>
                <module>webfx-stack-db-querypush-buscall</module>
                <module>webfx-stack-db-querypush-client</module>
                <module>webfx-stack-db-querypush-remote</module>
                <module>webfx-stack-db-querypush-server</module>
                <module>webfx-stack-db-querypush-server-simple</module>
                <module>webfx-stack-orm-dql-querypush-interceptor</module>
                <module>webfx-stack-orm-reactive-call</module>
            </java-package>

            <java-package name="dev.webfx.stack.db.submit">
                <module>webfx-stack-db-querypush-server</module>
                <module>webfx-stack-db-querysubmit-java-jdbc</module>
                <module>webfx-stack-db-querysubmit-vertx</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-db-submit-buscall</module>
                <module>webfx-stack-db-submit-listener</module>
                <module>webfx-stack-db-submit-remote</module>
                <module>webfx-stack-orm-dql-submit-interceptor</module>
                <module>webfx-stack-orm-entity</module>
                <module>webfx-stack-orm-entity-controls</module>
            </java-package>

            <java-package name="dev.webfx.stack.orm.domainmodel">
                <module>webfx-stack-orm-datasourcemodel-service</module>
                <module>webfx-stack-orm-domainmodel</module>
                <module>webfx-stack-orm-domainmodel-activity</module>
                <module>webfx-stack-orm-domainmodel-service</module>
                <module>webfx-stack-orm-dql-query-interceptor</module>
                <module>webfx-stack-orm-dql-querypush-interceptor</module>
                <module>webfx-stack-orm-dql-submit-interceptor</module>
                <module>webfx-stack-orm-entity</module>
                <module>webfx-stack-orm-entity-controls</module>
                <module>webfx-stack-orm-reactive-dql</module>
                <module>webfx-stack-orm-reactive-entities</module>
                <module>webfx-stack-orm-reactive-visual</module>
            </java-package>

            <java-package name="dev.webfx.stack.push.server">
                <module>webfx-stack-authn-login-server-gateway-facebook</module>
                <module>webfx-stack-authn-login-server-gateway-google</module>
                <module>webfx-stack-authn-login-server-gateway-mojoauth</module>
                <module>webfx-stack-authn-logout-server</module>
                <module>webfx-stack-db-querypush-server</module>
                <module>webfx-stack-push-server</module>
                <module>webfx-stack-push-server-liveclient-interceptor</module>
                <module>webfx-stack-push-server-simple</module>
            </java-package>

            <java-package name="dev.webfx.stack.session.state.server">
                <module>webfx-stack-authn-server-portal</module>
                <module>webfx-stack-authz-server</module>
                <module>webfx-stack-com-bus-json-server</module>
            </java-package>

            <java-package name="dev.webfx.stack.ui.fxraiser">
                <module>webfx-stack-i18n</module>
                <module>webfx-stack-ui-fxraiser</module>
                <module>webfx-stack-ui-fxraiser-json</module>
            </java-package>

            <java-package name="java.util.regex">
                <module>webfx-stack-conf</module>
                <module>webfx-stack-routing-router</module>
                <module>webfx-stack-routing-router-client</module>
            </java-package>

            <java-class name="javafx.scene.control.ScrollPane">
                <module>webfx-extras-visual-grid</module>
                <module>webfx-stack-ui-controls</module>
                <module>webfx-stack-ui-util</module>
            </java-class>

        </usages>

    </export-snapshot>

</project>