<?xml version="1.0" encoding="UTF-8"?>
<project>

    <parent name="webfx-stack-parent"/>

    <update-options>
        <generate-export-snapshot/>
    </update-options>

    <modules>
        <subdirectories-modules/>
    </modules>

    <required-libraries>

        <group>
            <groupId>dev.webfx</groupId>
            <version>0.1.0-SNAPSHOT</version>

            <webfx-library name="webfx"/>
            <webfx-library name="webfx-stack-parent"/>
            <webfx-library name="webfx-lib-javacupruntime"/>
        </group>

        <library name="com-zaxxer-hikari">
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <exported-packages>
                <package>com.zaxxer.hikari</package>
            </exported-packages>
        </library>

        <library name="Java-WebSocket">
            <groupId>org.java-websocket</groupId>
            <exported-packages>
                <package>org.java_websocket</package>
                <package>org.java_websocket.client</package>
                <package>org.java_websocket.drafts</package>
                <package>org.java_websocket.enums</package>
                <package>org.java_websocket.handshake</package>
            </exported-packages>
        </library>

        <group>
            <groupId>org.teavm</groupId>

            <library name="teavm-interop">
                <exported-packages>
                    <package>org.teavm.interop</package>
                </exported-packages>
            </library>

            <library name="teavm-jso">
                <exported-packages>
                    <package>org.teavm.jso</package>
                </exported-packages>
            </library>

            <library name="teavm-jso-apis">
                <exported-packages>
                    <package>org.teavm.jso.core</package>
                    <package>org.teavm.jso.dom.events</package>
                    <package>org.teavm.jso.typedarrays</package>
                </exported-packages>
            </library>

        </group>

        <group>
            <groupId>io.vertx</groupId>

            <library name="io-vertx-core">
                <artifactId>vertx-core</artifactId>
                <exported-packages>
                    <package>io.vertx.core</package>
                    <package>io.vertx.core.eventbus</package>
                    <package>io.vertx.core.eventbus.impl</package>
                    <package>io.vertx.core.http</package>
                    <package>io.vertx.core.json</package>
                    <package>io.vertx.core.net</package>
                    <package>io.vertx.core.spi.cluster</package>
                </exported-packages>
            </library>

            <library name="io-vertx-eventbusbridge-common">
                <artifactId>vertx-bridge-common</artifactId>
                <exported-packages>
                    <package>io.vertx.ext.bridge</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-jdbc">
                <artifactId>vertx-jdbc-client</artifactId>
                <exported-packages>
                    <package>io.vertx.jdbcclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-sql">
                <artifactId>vertx-sql-client</artifactId>
                <exported-packages>
                    <package>io.vertx.sqlclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-sql-pg">
                <artifactId>vertx-pg-client</artifactId>
                <exported-packages>
                    <package>io.vertx.pgclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-web">
                <artifactId>vertx-web</artifactId>
                <exported-packages>
                    <package>io.vertx.ext.web</package>
                    <package>io.vertx.ext.web.handler</package>
                    <package>io.vertx.ext.web.handler.sockjs</package>
                </exported-packages>
            </library>

        </group>

        <!-- Additional library required at runtime when authenticating to a postgres database in a docker container -->
        <library name="com-ongres-scram-client">
            <artifactId>client</artifactId>
            <groupId>com.ongres.scram</groupId>
        </library>

    </required-libraries>

    <!--

     ******************************************************************************************************************* 
     ******************************* Section managed by WebFX (DO NOT EDIT MANUALLY) *********************************** 
     ******************************************************************************************************************* 

     <export-snapshot> allows a much faster import of this WebFX library into another project. It's a self-contained
     image of this and children modules. All information required for the import of this library is present in this
     single file. The export snapshot is optional, and a WebFX library that doesn't generate it can still be imported
     into another project, but WebFX will then need to download all individual webfx.xml files for every children
     modules, together with their pom and sources. Knowing that each download requires a maven invocation that takes
     at least 3s (sometimes 10s or more), the export snapshot brings a significant performance improvement in the
     import process.

     -->

    <export-snapshot>

        <project name="webfx-stack-platform">

            <parent name="webfx-stack-parent"/>

            <modules>
                <module>webfx-platform-boot-vertx</module>
                <module>webfx-platform-scheduler-vertx</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-bus-simple</module>
                <module>webfx-stack-com-bus-vertx</module>
                <module>webfx-stack-com-buscall</module>
                <module>webfx-stack-com-buscalljob</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-com-websocket</module>
                <module>webfx-stack-com-websocket-gwt</module>
                <module>webfx-stack-com-websocket-java</module>
                <module>webfx-stack-com-websocketbus</module>
                <module>webfx-stack-com-websocketbus-web</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-query-remote</module>
                <module>webfx-stack-db-querysubmit-java-jdbc</module>
                <module>webfx-stack-db-querysubmit-vertx</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-db-submit-remote</module>
                <module>webfx-stack-db-submitlistener</module>
                <module>webfx-stack-platform-json</module>
                <module>webfx-stack-platform-json-gwt</module>
                <module>webfx-stack-platform-json-java</module>
                <module>webfx-stack-platform-json-teavm</module>
                <module>webfx-stack-platform-json-vertx</module>
                <module>webfx-stack-platform-webassembly</module>
                <module>webfx-stack-platform-webassembly-teavm</module>
                <module>webfx-stack-platform-webworker</module>
                <module>webfx-stack-platform-webworker-gwt</module>
                <module>webfx-stack-platform-webworker-java</module>
                <module>webfx-stack-platform-webworker-teavm</module>
                <module>webfx-stack-platform-windowhistory</module>
                <module>webfx-stack-platform-windowhistory-gwt</module>
                <module>webfx-stack-platform-windowhistory-java</module>
                <module>webfx-stack-platform-windowhistory-web</module>
                <module>webfx-stack-platform-windowlocation</module>
                <module>webfx-stack-platform-windowlocation-gwt</module>
                <module>webfx-stack-platform-windowlocation-java</module>
                <module>webfx-stack-vertx-common</module>
            </modules>

            <required-libraries>

                <group>
                    <groupId>dev.webfx</groupId>
                    <version>0.1.0-SNAPSHOT</version>

                    <webfx-library name="webfx"/>
                    <webfx-library name="webfx-stack-parent"/>
                    <webfx-library name="webfx-lib-javacupruntime"/>
                </group>

                <library name="com-zaxxer-hikari">
                    <groupId>com.zaxxer</groupId>
                    <artifactId>HikariCP</artifactId>
                    <exported-packages>
                        <package>com.zaxxer.hikari</package>
                    </exported-packages>
                </library>

                <library name="Java-WebSocket">
                    <groupId>org.java-websocket</groupId>
                    <exported-packages>
                        <package>org.java_websocket</package>
                        <package>org.java_websocket.client</package>
                        <package>org.java_websocket.drafts</package>
                        <package>org.java_websocket.enums</package>
                        <package>org.java_websocket.handshake</package>
                    </exported-packages>
                </library>

                <group>
                    <groupId>org.teavm</groupId>

                    <library name="teavm-interop">
                        <exported-packages>
                            <package>org.teavm.interop</package>
                        </exported-packages>
                    </library>

                    <library name="teavm-jso">
                        <exported-packages>
                            <package>org.teavm.jso</package>
                        </exported-packages>
                    </library>

                    <library name="teavm-jso-apis">
                        <exported-packages>
                            <package>org.teavm.jso.core</package>
                            <package>org.teavm.jso.dom.events</package>
                            <package>org.teavm.jso.typedarrays</package>
                        </exported-packages>
                    </library>

                </group>

                <group>
                    <groupId>io.vertx</groupId>

                    <library name="io-vertx-core">
                        <artifactId>vertx-core</artifactId>
                        <exported-packages>
                            <package>io.vertx.core</package>
                            <package>io.vertx.core.eventbus</package>
                            <package>io.vertx.core.eventbus.impl</package>
                            <package>io.vertx.core.http</package>
                            <package>io.vertx.core.json</package>
                            <package>io.vertx.core.net</package>
                            <package>io.vertx.core.spi.cluster</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-eventbusbridge-common">
                        <artifactId>vertx-bridge-common</artifactId>
                        <exported-packages>
                            <package>io.vertx.ext.bridge</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-client-jdbc">
                        <artifactId>vertx-jdbc-client</artifactId>
                        <exported-packages>
                            <package>io.vertx.jdbcclient</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-client-sql">
                        <artifactId>vertx-sql-client</artifactId>
                        <exported-packages>
                            <package>io.vertx.sqlclient</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-client-sql-pg">
                        <artifactId>vertx-pg-client</artifactId>
                        <exported-packages>
                            <package>io.vertx.pgclient</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-web">
                        <artifactId>vertx-web</artifactId>
                        <exported-packages>
                            <package>io.vertx.ext.web</package>
                            <package>io.vertx.ext.web.handler</package>
                            <package>io.vertx.ext.web.handler.sockjs</package>
                        </exported-packages>
                    </library>

                </group>

                <!-- Additional library required at runtime when authenticating to a postgres database in a docker container -->
                <library name="com-ongres-scram-client">
                    <artifactId>client</artifactId>
                    <groupId>com.ongres.scram</groupId>
                </library>

            </required-libraries>

        </project>

        <project name="webfx-platform-boot-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.shared.services.boot.spi.ApplicationBooterProvider">dev.webfx.platform.boot.spi.impl.vertx.VertxApplicationBooterVerticle</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.boot.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>io-vertx-eventbusbridge-common</module>
                <module>io-vertx-web</module>
                <module>java-nio-emul</module>
                <module>java.base</module>
                <module>webfx-platform-shared-boot</module>
                <module>webfx-platform-shared-shutdown</module>
                <module>webfx-stack-vertx-common</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-scheduler-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.shared.services.scheduler.spi.SchedulerProvider">dev.webfx.platform.scheduler.spi.impl.vertx.VertxSchedulerProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.scheduler.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>webfx-platform-shared-scheduler</module>
                <module>webfx-stack-vertx-common</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-async">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.async</package>
                <package>dev.webfx.stack.async.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>java.logging</module>
                <module>webfx-platform-shared-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-bus">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus</package>
                <package>dev.webfx.stack.com.bus.spi</package>
                <package>dev.webfx.stack.com.bus.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-platform-shared-scheduler</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.com.bus.spi.BusServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-com-bus-simple">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.spi.BusServiceProvider">dev.webfx.stack.com.bus.spi.impl.simple.SimpleBusServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.simple</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-stack-com-bus</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-bus-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.spi.BusServiceProvider">dev.webfx.stack.com.bus.spi.impl.vertx.VertxBusServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.bus.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-platform-json</module>
                <module>webfx-stack-vertx-common</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-buscall">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.shared.services.boot.spi.ApplicationModuleBooter">dev.webfx.stack.com.buscall.BusCallModuleBooter</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.com.buscall.BusCallArgument$ProvidedSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.com.buscall.BusCallResult$ProvidedSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.com.buscall.SerializableAsyncResult$ProvidedSerialCodec</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.buscall</package>
                <package>dev.webfx.stack.com.buscall.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-kit-javafxbase-emul</module>
                <module>webfx-platform-shared-boot</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.com.buscall.spi.BusCallEndpoint</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-com-buscalljob">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.shared.services.boot.spi.ApplicationJob">dev.webfx.stack.com.buscall.job.BusCallServerJob</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.buscall.job</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-shared-boot</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-buscall</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-serial">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.shared.services.boot.spi.ApplicationModuleBooter">dev.webfx.stack.com.serial.SerialCodecModuleBooter</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.com.serial.spi.impl.ProvidedBatchSerialCodec</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.serial</package>
                <package>dev.webfx.stack.com.serial.spi</package>
                <package>dev.webfx.stack.com.serial.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-boot</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.com.serial.spi.SerialCodec</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-com-websocket">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.websocket</package>
                <package>dev.webfx.stack.com.websocket.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.com.websocket.spi.WebSocketServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-com-websocket-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.websocket.spi.WebSocketServiceProvider">dev.webfx.stack.com.websocket.spi.impl.gwt.GwtWebSocketServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <html>
                <body order="-10">
                    <script charset="utf-8" src="dev/webfx/stack/platform/client/services/websocket/spi/impl/gwt/sockjs.min.js" type="text/javascript"/>
                    <script charset="utf-8" src="dev/webfx/stack/platform/client/services/websocket/spi/impl/gwt/sockjs-quickstart.js" type="text/javascript"/>
                </body>
            </html>

            <source-packages>
                <package>dev.webfx.stack.com.websocket.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>webfx-stack-com-websocket</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-websocket-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.websocket.spi.WebSocketServiceProvider">dev.webfx.stack.com.websocket.spi.impl.java.JavaWebSocketServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.websocket.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>Java-WebSocket</module>
                <module>java-nio-emul</module>
                <module>java.base</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-stack-com-websocket</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-websocketbus">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.spi.BusServiceProvider">dev.webfx.stack.com.websocketbus.WebsocketBusServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.websocketbus</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-platform-shared-resource</module>
                <module>webfx-platform-shared-scheduler</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-websocket</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-com-websocketbus-web">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.bus.spi.BusServiceProvider">dev.webfx.stack.com.websocketbus.web.WebWebsocketBusServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.com.websocketbus.web</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-shared-resource</module>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-websocketbus</module>
                <module>webfx-stack-platform-json</module>
                <module>webfx-stack-platform-windowlocation</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-datascope">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.datascope.aggregate.AggregateScope$ProvidedSerialCodec</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.datascope</package>
                <package>dev.webfx.stack.db.datascope.aggregate</package>
                <package>dev.webfx.stack.db.datascope.schema</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-datasource">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.datasource</package>
                <package>dev.webfx.stack.db.datasource.jdbc</package>
                <package>dev.webfx.stack.db.datasource.spi</package>
                <package>dev.webfx.stack.db.datasource.spi.simple</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.db.datasource.spi.LocalDataSourceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-db-query">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.buscall.spi.BusCallEndpoint">dev.webfx.stack.db.query.ExecuteQueryBusCallEndpoint</provider>
                <provider interface="dev.webfx.stack.com.buscall.spi.BusCallEndpoint">dev.webfx.stack.db.query.ExecuteQueryBatchBusCallEndpoint</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.query.QueryArgument$ProvidedSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.query.QueryResult$ProvidedSerialCodec</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <reflect>
                <array-new-instance>
                    <class>dev.webfx.stack.db.query.QueryResult</class>
                </array-new-instance>
            </reflect>

            <source-packages>
                <package>dev.webfx.stack.db.query</package>
                <package>dev.webfx.stack.db.query.compression</package>
                <package>dev.webfx.stack.db.query.compression.repeat</package>
                <package>dev.webfx.stack.db.query.spi</package>
                <package>dev.webfx.stack.db.query.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-com-buscall</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.db.query.spi.QueryServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-db-query-remote">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.query.spi.QueryServiceProvider">dev.webfx.stack.db.query.spi.impl.remote.RemoteQueryServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.query.spi.impl.remote</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-stack-db-query</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querysubmit-java-jdbc">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.query.spi.QueryServiceProvider">dev.webfx.stack.db.query.spi.impl.jdbc.JdbcQueryServiceProvider</provider>
                <provider interface="dev.webfx.stack.db.submit.spi.SubmitServiceProvider">dev.webfx.stack.db.submit.spi.impl.jdbc.JdbcSubmitServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules>
                    <module optional="true">com-zaxxer-hikari</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.query.spi.impl.jdbc</package>
                <package>dev.webfx.stack.db.querysubmit.jdbc</package>
                <package>dev.webfx.stack.db.submit.spi.impl.jdbc</package>
            </source-packages>

            <used-by-source-modules>
                <module>com-zaxxer-hikari</module>
                <module>java.base</module>
                <module>java.sql</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-submit</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-querysubmit-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.query.spi.QueryServiceProvider">dev.webfx.stack.db.query.spi.impl.vertx.VertxQueryServiceProvider</provider>
                <provider interface="dev.webfx.stack.db.submit.spi.SubmitServiceProvider">dev.webfx.stack.db.submit.spi.impl.vertx.VertxSubmitServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
                <plugin-module>java.sql</plugin-module>                <!-- Module required by vertx-mysql-postgresql-client-jasync -->
                <!-- Additional module required at runtime when authenticating to a postgres database in a docker container -->
                <plugin-module>com-ongres-scram-client</plugin-module>
            </dependencies>


            <source-packages>
                <package>dev.webfx.stack.db.query.spi.impl.vertx</package>
                <package>dev.webfx.stack.db.querysubmit</package>
                <package>dev.webfx.stack.db.submit.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-client-jdbc</module>
                <module>io-vertx-client-sql</module>
                <module>io-vertx-client-sql-pg</module>
                <module>io-vertx-core</module>
                <module>java.base</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-db-query</module>
                <module>webfx-stack-db-submit</module>
                <module>webfx-stack-db-submitlistener</module>
                <module>webfx-stack-vertx-common</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-submit">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.com.buscall.spi.BusCallEndpoint">dev.webfx.stack.db.submit.ExecuteSubmitBusCallEndpoint</provider>
                <provider interface="dev.webfx.stack.com.buscall.spi.BusCallEndpoint">dev.webfx.stack.db.submit.ExecuteSubmitBatchBusCallEndpoint</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.submit.SubmitArgument$ProvidedSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.submit.SubmitResult$ProvidedSerialCodec</provider>
                <provider interface="dev.webfx.stack.com.serial.spi.SerialCodec">dev.webfx.stack.db.submit.GeneratedKeyBatchIndex$ProvidedSerialCodec</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <reflect>
                <array-new-instance>
                    <class>dev.webfx.stack.db.submit.SubmitResult</class>
                </array-new-instance>
            </reflect>

            <source-packages>
                <package>dev.webfx.stack.db.submit</package>
                <package>dev.webfx.stack.db.submit.spi</package>
                <package>dev.webfx.stack.db.submit.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-com-buscall</module>
                <module>webfx-stack-com-serial</module>
                <module>webfx-stack-db-datascope</module>
                <module>webfx-stack-db-datasource</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.db.submit.spi.SubmitServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-db-submit-remote">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.db.submit.spi.SubmitServiceProvider">dev.webfx.stack.db.submit.spi.impl.remote.RemoteSubmitServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.submit.spi.impl.remote</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-stack-db-submit</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-db-submitlistener">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.shared.services.boot.spi.ApplicationModuleBooter">dev.webfx.stack.db.submitlistener.SubmitListenerModuleBooter</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.db.submitlistener</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-boot</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-db-submit</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.stack.db.submitlistener.SubmitListener</optional-service>
            </used-services>

        </project>

        <project name="webfx-stack-platform-json">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.json</package>
                <package>dev.webfx.stack.platform.json.parser</package>
                <package>dev.webfx.stack.platform.json.parser.javacup</package>
                <package>dev.webfx.stack.platform.json.parser.jflex</package>
                <package>dev.webfx.stack.platform.json.spi</package>
                <package>dev.webfx.stack.platform.json.spi.impl.listmap</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-lib-javacupruntime</module>
                <module>webfx-platform-shared-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.platform.json.spi.JsonProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-platform-json-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.json.spi.JsonProvider">dev.webfx.stack.platform.json.spi.impl.gwt.GwtJsonObject</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.json.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-json-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.json.spi.JsonProvider">dev.webfx.stack.platform.json.spi.impl.java.JavaJsonProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.json.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-json-teavm">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.json.spi.JsonProvider">dev.webfx.stack.platform.json.spi.impl.teavm.TeaVmJsonObject</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.json.spi.impl.teavm</package>
            </source-packages>

            <used-by-source-modules>
                <module>teavm-jso</module>
                <module>teavm-jso-apis</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-json-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.json.spi.JsonProvider">dev.webfx.stack.platform.json.spi.impl.vertx.VertxJsonObject</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.json.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>java.base</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-webassembly">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.webassembly</package>
                <package>dev.webfx.stack.platform.webassembly.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.platform.webassembly.spi.WebAssemblyProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-platform-webassembly-teavm">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.webassembly.spi.WebAssemblyProvider">dev.webfx.stack.platform.webassembly.spi.impl.teavm.TeaVmWebAssemblyProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.webassembly.spi.impl.teavm</package>
                <package>dev.webfx.stack.platform.webassembly.spi.impl.teavm.wasm</package>
            </source-packages>

            <used-by-source-modules>
                <module>java-nio-emul</module>
                <module>teavm-interop</module>
                <module>teavm-jso</module>
                <module>teavm-jso-apis</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-platform-json</module>
                <module>webfx-stack-platform-webassembly</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-webworker">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.webworker</package>
                <package>dev.webfx.stack.platform.webworker.pool</package>
                <package>dev.webfx.stack.platform.webworker.spi</package>
                <package>dev.webfx.stack.platform.webworker.spi.base</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.platform.webworker.spi.WorkerServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-platform-webworker-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.webworker.spi.WorkerServiceProvider">dev.webfx.stack.platform.webworker.spi.impl.gwt.GwtWorkerServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.webworker.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>elemental2-dom</module>
                <module>java.base</module>
                <module>webfx-stack-platform-webworker</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-webworker-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.webworker.spi.WorkerServiceProvider">dev.webfx.stack.platform.webworker.spi.impl.java.JavaWorkerServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.webworker.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-client-uischeduler</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-stack-platform-json</module>
                <module>webfx-stack-platform-webworker</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-webworker-teavm">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.webworker.spi.impl.teavm</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>teavm-interop</module>
                <module>teavm-jso</module>
                <module>teavm-jso-apis</module>
                <module>webfx-stack-platform-webworker</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-windowhistory">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.windowhistory</package>
                <package>dev.webfx.stack.platform.windowhistory.spi</package>
                <package>dev.webfx.stack.platform.windowhistory.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-platform-json</module>
                <module>webfx-stack-platform-windowlocation</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.platform.windowhistory.spi.WindowHistoryProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-platform-windowhistory-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.windowhistory.spi.impl.web.JsWindowHistory">dev.webfx.stack.platform.windowhistory.spi.impl.gwt.GwtJsWindowHistory</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.windowhistory.spi.impl.gwt</package>
                <package>dev.webfx.stack.platform.windowhistory.spi.impl.gwt.jsinterop</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>java.base</module>
                <module>jsinterop-annotations</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-platform-json</module>
                <module>webfx-stack-platform-json-gwt</module>
                <module>webfx-stack-platform-windowhistory-web</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-windowhistory-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.windowhistory.spi.WindowHistoryProvider">dev.webfx.stack.platform.windowhistory.spi.impl.java.JavaWindowHistoryProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.windowhistory.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-stack-platform-windowhistory</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-windowhistory-web">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.windowhistory.spi.WindowHistoryProvider">dev.webfx.stack.platform.windowhistory.spi.impl.web.WebWindowHistoryProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.windowhistory.spi.impl.web</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-client-uischeduler</module>
                <module>webfx-platform-shared-log</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-async</module>
                <module>webfx-stack-platform-json</module>
                <module>webfx-stack-platform-windowhistory</module>
                <module>webfx-stack-platform-windowlocation</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.platform.windowhistory.spi.impl.web.JsWindowHistory</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-platform-windowlocation">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.windowlocation</package>
                <package>dev.webfx.stack.platform.windowlocation.spi</package>
                <package>dev.webfx.stack.platform.windowlocation.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-platform-json</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.stack.platform.windowlocation.spi.WindowLocationProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-stack-platform-windowlocation-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.windowlocation.spi.WindowLocationProvider">dev.webfx.stack.platform.windowlocation.spi.impl.gwt.GwtWindowLocationProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.windowlocation.spi.impl.gwt</package>
                <package>dev.webfx.stack.platform.windowlocation.spi.impl.gwt.jsinterop</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>jsinterop-annotations</module>
                <module>webfx-platform-shared-util</module>
                <module>webfx-stack-platform-windowlocation</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-platform-windowlocation-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.stack.platform.windowlocation.spi.WindowLocationProvider">dev.webfx.stack.platform.windowlocation.spi.impl.java.JavaWindowLocationProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.stack.platform.windowlocation.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-stack-com-bus</module>
                <module>webfx-stack-com-websocketbus</module>
                <module>webfx-stack-platform-windowhistory</module>
                <module>webfx-stack-platform-windowlocation</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-stack-vertx-common">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
                <plugin-module>org.slf4j.jul</plugin-module>
            </dependencies>

            <required-libraries>
                <library name="org.slf4j.jul">
                    <artifactId>slf4j-jdk14</artifactId>
                    <groupId>org.slf4j</groupId>
                    <version>1.7.36</version>
        
                    <exported-packages>
                        <package>org.slf4j.impl</package>
                    </exported-packages>

                </library>
            </required-libraries>

            <source-packages>
                <package>dev.webfx.stack.vertx.common</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
            </used-by-source-modules>

        </project>

        <usages>

            <java-package name="java.util.regex"/>

            <java-class name="javafx.scene.control.ScrollPane"/>

        </usages>

    </export-snapshot>

</project>